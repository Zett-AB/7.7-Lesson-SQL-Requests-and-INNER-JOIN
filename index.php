<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Урок 7.7. SQL запросы. INNER JOIN</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="normalize.css">
</head>

<body>
    <main>
        <header>
            <h1>
                Урок 7.7. SQL запросы. INNER JOIN
            </h1>
            <h4 class="subtitle">
                Урок 7.7. SQL запросы. INNER JOIN
            </h4>
            <div class="code-php">
                <?php
                $nickname = "Александр!";
                $hello = "Привет ";
                $offer = "Продолжаем изучение РНР и MySQL<br>
                            Узнаем как можно SQL запросом обратиться сразу двум таблицам и рассмотрим операторы INNER JOIN";

                echo "<h2 class='subtitle-php'>" . $hello . $nickname . "<br>" . "<br>" . $offer;
                ?>
            </div>
        </header>
        <section class="begin">
            <div class="part-1">
                <p>
                    На данном уроке/занятии мы продолжим изучение SQL запросов в частности на данном занятии мы изучим и научимся работать с оператором INNER JOIN.<br>
                    При работе с БД нередко необходимо получить информацию из нескольких таблиц для этого используют запросы соединения таблиц.
                </p>
                <p>
                    Соединение таблиц - это операция, когда таблицы сравниваются между собой построчно и появляетсмя возможность вывода столбцов из всех таблиц, участвующих в соединении.
                </p>
                <p>
                    INNER JOIN - это простое соединение двух и более таблиц.<br>
                    INNER JOIN - внутреннее перекрестное объединение, этот тип объединения позволяет извлекать строки, которые присутствуют во всех объединяемых таблицах.
                </p>
                <p>
                    После кратной теоретической части переходим к практической.
                </p>
            </div>
        </section>
        <section class="lesson">
            <div class="lespart1">
                <P>
                    Заходим в панель упарвления БД, в нашем случаи в phpMyAdmin и выбираем нашу БД study7.2lesson.<br>
                    Далее выбираем нашу таблицу movie.<br>
                    Далее выбираем вкладку SQL в которой можно писать команды для выолнения и получать результаты.
                </P>
                <P>
                    Для изучения работы запроса INNER JOIN нам нужно, как уже указал выше зайти во вкладку SQL, и в поле пишем следующий запрос:<br>
                    SELECT * FROM categories INNER JOIN movie<br>
                    Данным запросом мы соединили наши таблицы categories и movie.<br>
                    Теперь, чтобы наш запрос выполнился жмем на конпку Вперед
                </P>
                <P>
                    После этого у нас откроется окно в котором мы увидим как выполнен наш запрос и обе таблицыб объединены по индексам id.<br>
                    Однако такой запрос используется крайне редко так как сопоставляются условия двух таблиц, что мы и видим.<br>
                    То есть когда строка одной таблицы сопоставляется со строкой другой таблицы, в нашем случаи сопоставление идет по id, поэтому мы видим две строки с одинаковыми данными.<br>
                    Как правило запрос всегда пишестся с условиями отбора.<br>
                </P>
                <p>
                    Существуют два способа условия отбора:<br>
                <ul>
                    <li>
                        первый с помощью использования ON;
                    </li>
                    <li>
                        второй с помощью использования USING.
                    </li>
                </ul>
                </p>
                <p>
                    В первом случаи при использовании условия ON мы можем происать условия, а во втором же случаи мы задаем условия с одинаковыми индетификаторами.
                </p>
                <p>
                    Давайт проверим условие USING.<br>
                    Пишем наш запрос в SQL:<br>
                    SELECT * FROM categories INNER JOIN movie USING (id)<br>
                    тут мы задали в скобках после условия USING id, то есть по каким условиям объединить таблицы и нажав кнопку Вперед мы увидим только две строки с одинаковым id = 1, потому что по условию нужно объеденить две таблицы с одинаковыим значением/идентификаторами id и вывести его, что он сделал.<br>
                    Такой запрос в нашем случаи несовсем корректен, так как нам нужно вывести все содержимое обоих таблиц.<br>
                </p>
                <p>
                    Для того чтобы вывести содержимое обоих таблиц необходимо использовать условие ON.<br>
                    Снова переходим во вкладку SQL и пишем следующий запрос:<br>
                    SELECT * FROM categories INNER JOIN movie ON movie.category_id = categories.id<br>
                    Жмем кнопку Вперед
                </p>
                <p>
                    В данном запросе мы написали следующее:<br>
                    мы делаем запрос к таблице categories и объединяем её с таблице movie(наш запрос - SELECT * FROM categories INNER JOIN movie), далее мы задаем условие ON где в таблице movie поле/столбец category_id равняется с данными в таблице categories в поле id.<br>
                    На выходе видим полное содержимое обоих таблиц.
                </p>
                <p>
                    Мы также можем использовать и другой запрос, вернее запрос с использованием другого условия , а именно WHERE.<br>
                    Вот как будет выглядеть наш запрос:<br>
                    SELECT * FROM categories, movie WHERE movie.category_id = categories.id<br>
                    Жмем кнопку Вперед<br>
                    Видим аналогичный результат.
                </p>
                <p>
                    Однако лучше использовать запрос JOIN, т.к. он выполняется быстрее.
                </p>
                <p></p>
            </div>
        </section>
    </main>

</body>

</html>